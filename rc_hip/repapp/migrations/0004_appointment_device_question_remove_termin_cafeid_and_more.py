# Generated by Django 4.2 on 2023-04-16 18:44

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('repapp', '0003_alter_frage_organisatorid_alter_frage_reparateurid_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(verbose_name='Zeit')),
                ('confirmed', models.BooleanField(verbose_name='bestätigt')),
            ],
            options={
                'verbose_name': 'Termin',
                'verbose_name_plural': 'Termine',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', models.CharField(max_length=200, verbose_name='ID')),
                ('owner', models.CharField(max_length=200, verbose_name='Besitzer')),
                ('mail', models.CharField(max_length=200, verbose_name='eMail')),
                ('device', models.CharField(max_length=200, verbose_name='Gerät')),
                ('error', models.TextField(verbose_name='Fehler')),
                ('follow_up', models.BooleanField(verbose_name='Folgetermin')),
            ],
            options={
                'verbose_name': 'Gerät',
                'verbose_name_plural': 'Geräte',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(verbose_name='Frage')),
                ('answer', models.TextField(verbose_name='Antwort')),
                ('date', models.DateField(verbose_name='Erstellungsdatum')),
                ('deviceid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repapp.device', verbose_name='Gerät')),
            ],
            options={
                'verbose_name': 'Frage',
                'verbose_name_plural': 'Fragen',
            },
        ),
        migrations.RemoveField(
            model_name='termin',
            name='cafeid',
        ),
        migrations.RemoveField(
            model_name='termin',
            name='gerätid',
        ),
        migrations.RemoveField(
            model_name='termin',
            name='reparateurid',
        ),
        migrations.AlterModelOptions(
            name='cafe',
            options={'verbose_name': 'Repair-Café', 'verbose_name_plural': 'Repair-Cafés'},
        ),
        migrations.AlterModelOptions(
            name='organisator',
            options={'verbose_name': 'Organisator', 'verbose_name_plural': 'Organisatoren'},
        ),
        migrations.AlterModelOptions(
            name='reparateur',
            options={'verbose_name': 'Reparateur', 'verbose_name_plural': 'Reparateure'},
        ),
        migrations.RemoveField(
            model_name='cafe',
            name='datum',
        ),
        migrations.RemoveField(
            model_name='cafe',
            name='ort',
        ),
        migrations.AddField(
            model_name='cafe',
            name='event_date',
            field=models.DateField(default=datetime.date(2023, 4, 16), verbose_name='Datum'),
        ),
        migrations.AddField(
            model_name='cafe',
            name='location',
            field=models.CharField(default='', max_length=200, verbose_name='Ort'),
        ),
        migrations.AlterField(
            model_name='organisator',
            name='mail',
            field=models.CharField(max_length=200, verbose_name='eMail'),
        ),
        migrations.AlterField(
            model_name='organisator',
            name='name',
            field=models.CharField(max_length=200, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='reparateur',
            name='mail',
            field=models.CharField(max_length=200, verbose_name='eMail'),
        ),
        migrations.AlterField(
            model_name='reparateur',
            name='name',
            field=models.CharField(max_length=200, verbose_name='Name'),
        ),
        migrations.DeleteModel(
            name='Frage',
        ),
        migrations.DeleteModel(
            name='Gerät',
        ),
        migrations.DeleteModel(
            name='Termin',
        ),
        migrations.AddField(
            model_name='question',
            name='organisatorid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='repapp.organisator', verbose_name='Organisator'),
        ),
        migrations.AddField(
            model_name='question',
            name='reparateurid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='repapp.reparateur', verbose_name='Reparateur'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='cafeid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repapp.cafe', verbose_name='Repair-Café'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='deviceid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='repapp.device', verbose_name='Gerät'),
        ),
        migrations.AddField(
            model_name='appointment',
            name='reparateurid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='repapp.reparateur', verbose_name='Reparateur'),
        ),
    ]
